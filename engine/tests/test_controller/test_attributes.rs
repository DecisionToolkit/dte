use super::*;
use dtee::{Controller, SPACE};

/// This test checks does nothing, it is just for using
/// the `show` and `show_visible` functions for code coverage in tests.
/// No impact on production code, only tests.
#[test]
fn _0001() {
  paper(&Controller::new(INPUT_0001));
  screen(&Controller::new(INPUT_0001));
}

#[test]
fn _0002() {
  let expected = r#"
    •••••••••
    •••••••••
    ◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
  "#;
  let controller = Controller::new(INPUT_0001);
  assert_eq!(expected, attr(controller.content()));
}

#[test]
fn _0003() {
  let expected = r#"
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••
  "#;
  let mut controller = Controller::new(INPUT_0001);
  actions(&mut controller, &[Insert(SPACE, 38)]);
  assert_eq!(expected, attr(controller.content()));
}

#[test]
fn _0004() {
  let expected = r#"
    •••••••••••••••••••
    •••••••••••••••••••
    ◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
    •••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••
  "#;
  let controller = Controller::new(INPUT_0002);
  assert_eq!(expected, attr(controller.content()));
}
